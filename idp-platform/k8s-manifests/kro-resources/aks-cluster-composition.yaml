apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: aks-cluster-composition
  namespace: default
spec:
  schema:
    apiVersion: v1alpha1
    kind: AKSCluster
    spec:
      type: object
      properties:
        clusterName:
          type: string
        location:
          type: string
        nodePoolType:
          type: string
        enableNAP:
          type: boolean
        dryRun:
          type: boolean
        advancedConfig:
          type: object
          properties:
            kubernetesVersion:
              type: string
            maxNodes:
              type: integer
            enableSpot:
              type: boolean
  resources:
    # Resource Group for organizing Azure resources
    - id: resourceGroup
      template:
        apiVersion: resources.azure.com/v1api20200601
        kind: ResourceGroup
        metadata:
          name: "rg-{{.spec.clusterName}}"
          namespace: azure-system
          annotations:
            kro.run/dry-run: "{{.spec.dryRun}}"
        spec:
          location: "{{.spec.location}}"
          tags:
            environment: "dev"
            createdBy: "kro-aks-composition"
            clusterName: "{{.spec.clusterName}}"
    
    # Managed Identity for the AKS cluster
    - id: managedIdentity
      template:
        apiVersion: managedidentity.azure.com/v1api20230131
        kind: UserAssignedIdentity
        metadata:
          name: "id-{{.spec.clusterName}}"
          namespace: azure-system
          annotations:
            kro.run/dry-run: "{{.spec.dryRun}}"
        spec:
          location: "{{.spec.location}}"
          owner:
            name: "rg-{{.spec.clusterName}}"
          tags:
            clusterName: "{{.spec.clusterName}}"
    
    # AKS Managed Cluster - Simplified
    - id: managedCluster
      template:
        apiVersion: containerservice.azure.com/v1api20240402preview
        kind: ManagedCluster
        metadata:
          name: "{{.spec.clusterName}}"
          namespace: azure-system
          annotations:
            kro.run/dry-run: "{{.spec.dryRun}}"
        spec:
          location: "{{.spec.location}}"
          owner:
            name: "rg-{{.spec.clusterName}}"
          identity:
            type: SystemAssigned
          
          # Default System Node Pool
          agentPoolProfiles:
            - name: systempool
              mode: System
              count: 1
              vmSize: "{{if eq .spec.nodePoolType \"standard\"}}Standard_DS2_v2{{else if eq .spec.nodePoolType \"memory-optimized\"}}Standard_E2s_v3{{else}}Standard_F2s_v2{{end}}"
              enableAutoScaling: true
              minCount: 1
              maxCount: 10
          
          # Kubernetes Version
          kubernetesVersion: "{{.spec.advancedConfig.kubernetesVersion | default \"1.28.3\"}}"
          
          # Tags
          tags:
            environment: "dev"
            nodePoolType: "{{.spec.nodePoolType}}"
            dryRun: "{{.spec.dryRun}}"
            clusterName: "{{.spec.clusterName}}"