apiVersion: v1
kind: Service
metadata:
  name: idp-backend-service
  namespace: idp-platform
  labels:
    app.kubernetes.io/name: idp-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: idp-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: idp-backend
    app.kubernetes.io/component: backend
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: idp-frontend-service
  namespace: idp-platform
  labels:
    app.kubernetes.io/name: idp-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: idp-platform
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: idp-frontend
    app.kubernetes.io/component: frontend
  sessionAffinity: None
---
# Optional: LoadBalancer service for direct access (if not using Istio)
apiVersion: v1
kind: Service
metadata:
  name: idp-frontend-lb
  namespace: idp-platform
  labels:
    app.kubernetes.io/name: idp-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: idp-platform
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: "/health"
    external-dns.alpha.kubernetes.io/hostname: "idp.davidmarkgardiner.co.uk"
    external-dns.alpha.kubernetes.io/ttl: "300"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: idp-frontend
    app.kubernetes.io/component: frontend
  sessionAffinity: None
  # Uncomment if you want to specify a specific IP
  # loadBalancerIP: "your-static-ip"